name: Create Artifact

on:
  workflow_call:
    inputs:
      PSADT_VERSION:
        description: 'The version of the PSADT source'
        required: true
        type: string
    outputs:
      RELEASE_VERSION:
        description: 'The version of the release'
        value: ${{ jobs.artifact.outputs.RELEASE_VERSION }}

jobs:
  artifact:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_VERSION: ${{ steps.release-info.outputs.RELEASE_VERSION }}

    steps:
      - name: get-release-info
        id: release-info
        shell: pwsh
        run: |
          $version = "$(Get-Date -Format 'yyyy-MM-dd')-${{ github.run_number }}"
          "RELEASE_VERSION=$version" >> $env:GITHUB_OUTPUT
          Write-Host "Set RELEASE_VERSION to $version"

      - name: checkout-psadt
        uses: actions/checkout@v4
        with:
          repository: 'PSAppDeployToolkit/PSAppDeployToolkit.git'
          sparse-checkout: 'Toolkit/AppDeployToolkit/*'
          sparse-checkout-cone-mode: false
          path: ./PSAppDeployToolkit
          ref: ${{ inputs.PSADT_VERSION }}

      - name: checkout-extensions
        uses: actions/checkout@v4
        with:
          path: ./ExtensionsSourceCode
          ref: ${{ github.ref }}

      - name: merge-extensions
        shell: pwsh
        run: |
          Move-Item -Force -Path "./PSAppDeployToolkit/Toolkit/AppDeployToolkit/" -Destination "./PSAppDeployToolkit/AppDeployToolkit/"
          Copy-Item -Force -Recurse -Path "./ExtensionsSourceCode/AppDeployToolkit/*" -Destination "./PSAppDeployToolkit/AppDeployToolkit/"
          Copy-Item -Force -Destination "./PSAppDeployToolkit" -Path @(
            "./ExtensionsSourceCode/Deploy-Application.ps1"
            "./ExtensionsSourceCode/DeployNxtApplication.exe"
            "./ExtensionsSourceCode/COPYING"
            "./ExtensionsSourceCode/COPYING.Lesser"
            "./ExtensionsSourceCode/README.txt"
            "./ExtensionsSourceCode/neo42PackageConfigValidationRules.json"
            "./ExtensionsSourceCode/Setup.cfg"
          )

      - name: remove-unwanted
        shell: pwsh
        run: |
          Remove-Item -Recurse -Force -Path @(
            "./ExtensionsSourceCode/.git*"
            "./PSAppDeployToolkit/.git*"

            "./PSAppDeployToolkit/Toolkit/"
            "./PSAppDeployToolkit/Deploy-Application.exe"
          )

      - name: create-folder-structure
        shell: pwsh
        run: |
          New-Item -ItemType File -Force -Path @(
            "./PSAppDeployToolkit/SupportFiles/User/Place user files here"
            "./PSAppDeployToolkit/Files/Place setup files here"
            "./PSAppDeployToolkit/Place Setup ico here"
          )

      - name: inject-version
        shell: pwsh
        run: |
          @(
            "./PSAppDeployToolkit/Deploy-Application.ps1"
            "./PSAppDeployToolkit/AppDeployToolkit/AppDeployToolkitExtensions.ps1"
            "./PSAppDeployToolkit/AppDeployToolkit/AppDeployToolkitExtensions.cs"
          ) | ForEach-Object {
            (Get-Content -Raw -Path $_) -replace '##REPLACEVERSION##', '${{ steps.release-info.outputs.RELEASE_VERSION }}' | Set-Content -Path $_
          }

      - name: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: PSAppDeployToolKitExtensions-$version-${{ github.ref_name }}
          path: .