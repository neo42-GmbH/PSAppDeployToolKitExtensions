{
    "ConfigVersion": {
        "Mandatory": true,
        "HelpText": "ConfigVersion is mandatory and must be a string with a Config Version number in the format of 4digits.2digits.2digits.variableDigit (e.g. 2023.01.01.1).",
        "Type": "System.String",
        "Regex": {
            "Pattern": "^\\d{4}\\.\\d{2}\\.\\d{2}\\.[0-9]+$",
            "Operator": "match"
        },
        "AllowEmpty": false
    },"AppArch": {
        "Mandatory": true,
        "HelpText": "AppArch is mandatory and must be a string with a value of x86, x64 or *.",
        "Validateset": [
            "x86",
            "x64",
            "*"
        ],
        "Type": "System.String",
        "AllowEmpty": false
    },
    "AppendInstParaToDefaultParameters": {
        "Mandatory": true,
        "HelpText": "AppendInstParaToDefaultParameters is mandatory and must be a boolean.",
        "Type": "System.Boolean"
    },
    "ProductGUID": {
        "Mandatory": true,
        "HelpText": "ProductGUID is mandatory and must be a string.",
        "Regex": {
            "Pattern": "^\\{[a-fA-F0-9]{8}-([a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}\\}$",
            "Operator": "match"
        },
        "Type": "System.String",
        "AllowEmpty": false
    },
    "RemovePackagesWithSameProductGUID": {
        "Mandatory": true,
        "HelpText": "RemovePackagesWithSameProductGUID is mandatory and must be a boolean.",
        "Type": "System.Boolean"
    },
    "PackageGUID": {
        "Mandatory": true,
        "HelpText": "PackageGUID is mandatory and must be a string.",
        "Regex": {
            "Pattern": "^\\{[a-fA-F0-9]{8}-([a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}\\}$",
            "Operator": "match"
        },
        "Type": "System.String",
        "AllowEmpty": false
    },
    "DependentPackages": {
        "SubKeys": {
            "GUID": {
                "Mandatory": false,
                "HelpText": "DependentPackages.GUID is optional and must be a string with a valid GUID.",
                "Type": "System.String",
                "Regex": {
                    "Pattern": "^\\{[a-fA-F0-9]{8}-([a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}\\}$",
                    "Operator": "match"
                }
            },
            "DesiredState": {
                "Mandatory": true,
                "HelpText": "DependentPackages.DesiredState is mandatory and must be a string with a value of Present or Absent.",
                "Type": "System.String",
                "Validateset": [
                    "Present",
                    "Absent"
                ]
            },
            "OnConflict": {
                "Mandatory": true,
                "HelpText": "DependentPackages.OnConflict is mandatory and must be a string with a value of Continue or Stop.",
                "Type": "System.String",
                "Validateset": [
                    "Fail",
                    "Uninstall",
                    "Warn",
                    "Continue"
                ]
            },
            "ErrorMessage": {
                "Mandatory": false,
                "HelpText": "DependentPackages.ErrorMessage is optional and must be a string.",
                "Type": "System.String"
            }
        },
        "HelpText": "DependentPackages is optional and must be an array PSCustomObjects.",
        "AllowEmpty": true,
        "ContainsDirectValues": false,
        "Type": "System.Array",
        "Mandatory": true
    },
    "RegPackagesKey": {
        "Mandatory": true,
        "HelpText": "RegPackagesKey is mandatory and must be a string.",
        "Type": "System.String",
        "AllowEmpty": false
    },
    "UninstallDisplayName": {
        "Mandatory": true,
        "HelpText": "UninstallDisplayName is mandatory and must be a string.",
        "Type": "System.String",
        "AllowEmpty": false
    },
    "Reboot": {
        "Mandatory": true,
        "AllowEmpty": false,
        "HelpText": "Reboot is mandatory and must be an integer of 0, 1 or 2.",
        "Type": "System.Int32",
        "Validateset": [
            0,
            1,
            2
        ]
    },
    "UserPartRevision": {
        "Mandatory": true,
        "HelpText": "UserPartRevision is mandatory and must be a string.",
        "Regex": {
            "Pattern": "^[0-9]{4},[0-9]{2},[0-9]{2},[0-9]{2}$",
            "Operator": "match"
        },
        "Type": "System.String",
        "AllowEmpty": true
    },
    "AppLang": {
        "Mandatory": true,
        "HelpText": "AppLang is mandatory and must be a string with a value of a valid culture name.",
        "Type": "System.String",
        "AllowEmpty": false
    },
    "AppName": {
        "Mandatory": true,
        "HelpText": "AppName is mandatory and must be a string. It must not contain any of the following characters: \\ / : * ? \" < > |",
        "Type": "System.String",
        "Regex": {
            "CheckInvalidFileNameChars": true
        },
        "AllowEmpty": false
    },
    "AppVendor": {
        "Mandatory": true,
        "HelpText": "AppVendor is mandatory and must be a string. It must not contain any of the following characters: \\ / : * ? \" < > |",
        "Type": "System.String",
        "Regex": {
            "CheckInvalidFileNameChars": true
        },
        "AllowEmpty": false
    },
    "AppVersion": {
        "Mandatory": true,
        "HelpText": "AppVersion is mandatory and must be a string. It must not contain any of the following characters: \\ / : * ? \" < > |",
        "Type": "System.String",
        "Regex": {
            "CheckInvalidFileNameChars": true
        },
        "AllowEmpty": false
    },
    "AppKillProcesses": {
        "Mandatory": true,
        "HelpText": "AppKillProcesses is mandatory and must be an array.",
        "SubKeys": {
            "Name": {
                "Mandatory": true,
                "HelpText": "AppKillProcesses.Name is mandatory in each item below AppKillProcesses and must be a string.",
                "Type": "System.String",
                "Regex": {
                    "Pattern": "^(\\*+|\\*\\.(\\*|exe))$",
                    "Operator": "notmatch"
                },
                "AllowEmpty": false
            },
            "Description": {
                "Mandatory": true,
                "HelpText": "AppKillProcesses.Description is mandatory for each item below AppKillProcesses and must be a string. If empty, the name will be used.",
                "Type": "System.String",
                "AllowEmpty": true
            }
        },
        "Type": "System.Array",
        "AllowEmpty": true
    },
    "TestConditionsPreSetupSuccessCheck": {
        "Mandatory": true,
        "HelpText": "TestConditionsPreSetupSuccessCheck is mandatory and must be a PSCustomObject.",
        "SubKeys": {
            "Install": {
                "Mandatory": true,
                "HelpText": "TestConditionsPreSetupSuccessCheck.Install is mandatory and must be a PSCustomObject.",
                "Subkeys": {
                    "TotalSecondsToWaitFor": {
                        "Mandatory": true,
                        "HelpText": "TestConditionsPreSetupSuccessCheck.Install.TotalSecondsToWaitFor is mandatory and must be an integer in the range of 1 and 3600.",
                        "Type": "System.Int32",
                        "Regex": {
                            "Pattern": "\\b([1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-2][0-9][0-9][0-9]|3[0-5][0-9][0-9]|3600)\\b" ,
                            "Operator": "match"
                        }
                    },
                    "ProcessesToWaitFor": {
                        "Mandatory": true,
                        "HelpText": "TestConditionsPreSetupSuccessCheck.Install.ProcessesToWaitFor is mandatory and must be an array.",
                        "SubKeys": {
                            "Name": {
                                "Mandatory": true,
                                "HelpText": "TestConditionsPreSetupSuccessCheck.Install.ProcessesToWaitFor.Name is mandatory in each item below TestConditionsPreSetupSuccessCheck.Install.ProcessesToWaitFor and must be a string.",
                                "Type": "System.String",
                                "AllowEmpty": false
                            },
                            "ShouldExist": {
                                "Mandatory": true,
                                "HelpText": "TestConditionsPreSetupSuccessCheck.Install.ProcessesToWaitFor.ShouldExist is mandatory and must be boolean.",
                                "Type": "System.Boolean",
                                "AllowEmpty": false
                            }
                        },
                        "Type": "System.Array",
                        "AllowEmpty": false
                    },
                    "RegkeysToWaitFor": {
                        "Mandatory": true,
                        "HelpText": "TestConditionsPreSetupSuccessCheck.Install.RegkeysToWaitFor is mandatory and must be an array.",
                        "SubKeys": {
                            "ValueName": {
                                "Mandatory": true,
                                "HelpText": "TestConditionsPreSetupSuccessCheck.Install.RegkeysToWaitFor.ValueName is mandatory in each item below TestConditionsPreSetupSuccessCheck.Install.RegkeysToWaitFor and must be a string.",
                                "Type": "System.String",
                                "AllowEmpty": true
                            },
                            "ValueData": {
                                "Mandatory": true,
                                "HelpText": "TestConditionsPreSetupSuccessCheck.Install.RegkeysToWaitFor.ValueData is mandatory in each item below TestConditionsPreSetupSuccessCheck.Install.RegkeysToWaitFor and must be a string.",
                                "Type": "System.String",
                                "AllowEmpty": true
                            },
                            "KeyPath": {
                                "Mandatory": true,
                                "HelpText": "TestConditionsPreSetupSuccessCheck.Install.RegkeysToWaitFor.KeyPath is mandatory in each item below TestConditionsPreSetupSuccessCheck.Install.RegkeysToWaitFor and must be a string.",
                                "Type": "System.String",
                                "AllowEmpty": false
                            },
                            "ShouldExist": {
                                "Mandatory": true,
                                "HelpText": "TestConditionsPreSetupSuccessCheck.Install.RegkeysToWaitFor.ShouldExist is mandatory in each item below TestConditionsPreSetupSuccessCheck.Install.RegkeysToWaitFor and must be a boolean.",
                                "Type": "System.Boolean"
                            }
                        },
                        "Type": "System.Array",
                        "AllowEmpty": false
                    },
                    "RegKeyOperator": {
                        "Mandatory": true,
                        "HelpText": "TestConditionsPreSetupSuccessCheck.Install.RegKeyOperator is mandatory and must be a string with a value of AND or OR.",
                        "Type": "System.String",
                        "Validateset": [
                            "AND",
                            "OR"
                        ]
                    },
                    "ProcessOperator": {
                        "Mandatory": true,
                        "HelpText": "TestConditionsPreSetupSuccessCheck.Install.ProcessOperator is mandatory and must be a string with a value of AND or OR.",
                        "Type": "System.String",
                        "Validateset": [
                            "AND",
                            "OR"
                        ]
                    }
                },
                "Type": "System.Management.Automation.PSCustomObject",
                "AllowEmpty": true
            },
            "Uninstall": {
                "Mandatory": true,
                "HelpText": "TestConditionsPreSetupSuccessCheck.Uninstall is mandatory and must be a hashtable.",
                "Subkeys": {
                    "TotalSecondsToWaitFor": {
                        "Mandatory": true,
                        "HelpText": "TestConditionsPreSetupSuccessCheck.Uninstall.TotalSecondsToWaitFor is mandatory and must be an integer in the range of 1 and 3600.",
                        "Type": "System.Int32",
                        "Regex": {
                            "Pattern": "\\b([1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-2][0-9][0-9][0-9]|3[0-5][0-9][0-9]|3600)\\b" ,
                            "Operator": "match"
                        }
                    },
                    "ProcessesToWaitFor": {
                        "Mandatory": true,
                        "HelpText": "TestConditionsPreSetupSuccessCheck.Uninstall.ProcessesToWaitFor is mandatory and must be an array.",
                        "SubKeys": {
                            "Name": {
                                "Mandatory": true,
                                "HelpText": "TestConditionsPreSetupSuccessCheck.Uninstall.ProcessesToWaitFor.Name is mandatory in each item below TestConditionsPreSetupSuccessCheck.Uninstall.ProcessesToWaitFor and must be a string.",
                                "Type": "System.String",
                                "AllowEmpty": false
                            },
                            "ShouldExist": {
                                "Mandatory": true,
                                "HelpText": "TestConditionsPreSetupSuccessCheck.Uninstall.ProcessesToWaitFor.ShouldExist is mandatory and must be boolean.",
                                "Type": "System.Boolean",
                                "AllowEmpty": false
                            }
                        },
                        "Type": "System.Array",
                        "AllowEmpty": false
                    },
                    "RegkeysToWaitFor": {
                        "Mandatory": true,
                        "HelpText": "TestConditionsPreSetupSuccessCheck.Uninstall.RegkeysToWaitFor is mandatory and must be an array.",
                        "SubKeys": {
                            "ValueName": {
                                "Mandatory": true,
                                "HelpText": "TestConditionsPreSetupSuccessCheck.Uninstall.RegkeysToWaitFor.ValueName is mandatory in each item below TestConditionsPreSetupSuccessCheck.Uninstall.RegkeysToWaitFor and must be a string.",
                                "Type": "System.String",
                                "AllowEmpty": true
                            },
                            "ValueData": {
                                "Mandatory": true,
                                "HelpText": "TestConditionsPreSetupSuccessCheck.Uninstall.RegkeysToWaitFor.ValueData is mandatory in each item below TestConditionsPreSetupSuccessCheck.Uninstall.RegkeysToWaitFor and must be a string.",
                                "Type": "System.String",
                                "AllowEmpty": true
                            },
                            "KeyPath": {
                                "Mandatory": true,
                                "HelpText": "TestConditionsPreSetupSuccessCheck.Uninstall.RegkeysToWaitFor.KeyPath is mandatory in each item below TestConditionsPreSetupSuccessCheck.Uninstall.RegkeysToWaitFor and must be a string.",
                                "Type": "System.String",
                                "AllowEmpty": false
                            },
                            "ShouldExist": {
                                "Mandatory": true,
                                "HelpText": "TestConditionsPreSetupSuccessCheck.Uninstall.RegkeysToWaitFor.ShouldExist is mandatory in each item below TestConditionsPreSetupSuccessCheck.Uninstall.RegkeysToWaitFor and must be a boolean.",
                                "Type": "System.Boolean"
                            }
                        },
                        "Type": "System.Array",
                        "AllowEmpty": false
                    },
                    "RegKeyOperator": {
                        "Mandatory": true,
                        "HelpText": "TestConditionsPreSetupSuccessCheck.Uninstall.RegKeyOperator is mandatory and must be a string with a value of AND or OR.",
                        "Type": "System.String",
                        "Validateset": [
                            "AND",
                            "OR"
                        ]
                    },
                    "ProcessOperator": {
                        "Mandatory": true,
                        "HelpText": "TestConditionsPreSetupSuccessCheck.Uninstall.ProcessOperator is mandatory and must be a string with a value of AND or OR.",
                        "Type": "System.String",
                        "Validateset": [
                            "AND",
                            "OR"
                        ]
                    }
                },
                "Type": "System.Management.Automation.PSCustomObject",
                "AllowEmpty": true
            }
        },
        "Type": "System.Management.Automation.PSCustomObject",
        "AllowEmpty": false
    },
    "AppRootFolder": {
        "Mandatory": true,
        "HelpText": "AppRootFolder is mandatory and must be a string.",
        "Type": "System.String",
        "AllowEmpty": false,
        "CheckInvalidFileNameChars": true
    },
    "App": {
        "Mandatory": true,
        "HelpText": "App is mandatory and must be a string.",
        "Type": "System.String",
        "AllowEmpty": false
    },
    "DisplayNamesToExcludeFromAppSearches": {
        "SubKeys": {
            "DirectValues": {
                "Mandatory": false,
                "HelpText": "DisplayNamesToExcludeFromAppSearches.DirectValues is optional and must be a string.",
                "Type": "System.String",
                "Regex": {
                    "CheckInvalidFileNameChars": true,
                    "Operator": "match",
                    "Pattern": ".*",
                    "ReplaceBeforeMatch": "\\*"
                }
            }
        },
        "HelpText": "DisplayNamesToExcludeFromAppSearches is mandatory and must be an array.",
        "AllowEmpty": true,
        "ContainsDirectValues": true,
        "Type": "System.Array",
        "Mandatory": true
    },
    "AppendUninstParaToDefaultParameters": {
        "Mandatory": true,
        "HelpText": "AppendUninstParaToDefaultParameters is mandatory and must be a boolean.",
        "Type": "System.Boolean"
    },
    "AcceptedInstallExitCodes": {
        "Mandatory": true,
        "Regex": {
            "Pattern": "^(\\*|-?\\d+(,-?\\d+)*)$",
            "Operator": "match"
        },
        "ErrorMessage": "AcceptedInstallExitCodes must be a comma separated list of numbers.",
        "Type": "System.String",
        "AllowEmpty": true
    },
    "AcceptedInstallRebootCodes": {
        "Mandatory": true,
        "Regex": {
            "Pattern": "^-?\\d+(,-?\\d+)*$",
            "Operator": "match"
        },
        "ErrorMessage": "AcceptedInstallRebootCodes must be a comma separated list of numbers.",
        "Type": "System.String",
        "AllowEmpty": true
    },
    "AcceptedUninstallExitCodes": {
        "Mandatory": true,
        "HelpText": "AcceptedUninstallExitCodes must be a comma separated list of numbers.",
        "Regex": {
            "Pattern": "^(\\*|-?\\d+(,-?\\d+)*)$",
            "Operator": "match"
        },
        "Type": "System.String",
        "AllowEmpty": true
    },
    "AcceptedUninstallRebootCodes": {
        "Mandatory": true,
        "Regex": {
            "Pattern": "^-?\\d+(,-?\\d+)*$",
            "Operator": "match"
        },
        "ErrorMessage": "AcceptedUninstallRebootCodes must be a comma separated list of numbers.",
        "Type": "System.String",
        "AllowEmpty": true
    }
}